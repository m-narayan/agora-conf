<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="# List versions of all Rails frameworks and the environment" fullCmd="about" taksId="about" /><RakeGroup description="" fullCmd="" taksId="attachment_version"><RakeTask description="# Modify attachment folder structure to support versions" fullCmd="attachment_version:migrate" taksId="migrate" /><RakeTask description="# Modify attachment folder structure to change from vestal versions to vcc version system" fullCmd="attachment_version:rollback" taksId="rollback" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="bigbluebutton_rails"><RakeGroup description="" fullCmd="" taksId="recordings"><RakeTask description="# Fetch recordings in all servers" fullCmd="bigbluebutton_rails:recordings:update" taksId="update" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="coverage"><RakeTask description="# All unit test coverage" fullCmd="coverage:all" taksId="all" /><RakeTask description="# Measures functional test coverage" fullCmd="coverage:func" taksId="func" /><RakeTask description="# Measures unit test coverage" fullCmd="coverage:unit" taksId="unit" /><RakeTask description="" fullCmd="coverage:clean" taksId="clean" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="# Create the database from config/database.yml for the current Rails.env (use db:create:all to create all dbs in the config)" fullCmd="db:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="data"><RakeTask description="# Dump contents of database to db/data.extension (defaults to yaml)" fullCmd="db:data:dump" taksId="dump" /><RakeTask description="# Dump contents of database to curr_dir_name/tablename.extension (defaults to yaml)" fullCmd="db:data:dump_dir" taksId="dump_dir" /><RakeTask description="# Load contents of db/data.extension (defaults to yaml) into database" fullCmd="db:data:load" taksId="load" /><RakeTask description="# Load contents of db/data_dir into database" fullCmd="db:data:load_dir" taksId="load_dir" /></RakeGroup><RakeTask description="# Drops the database for the current Rails.env (use db:drop:all to drop all databases)" fullCmd="db:drop" taksId="drop" /><RakeTask description="# Dump schema and data to db/schema.rb and db/data.yml" fullCmd="db:dump" taksId="dump" /><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="# Load fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /><RakeTask description="" fullCmd="db:fixtures:identify" taksId="identify" /></RakeGroup><RakeTask description="# Load schema and data from db/schema.rb and db/data.yml" fullCmd="db:load" taksId="load" /><RakeTask description="# Migrate the database (options: VERSION=x, VERBOSE=false)" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="# Display status of migrations" fullCmd="db:migrate:status" taksId="status" /><RakeTask description="" fullCmd="db:migrate:down" taksId="down" /><RakeTask description="" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask description="" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask description="" fullCmd="db:migrate:up" taksId="up" /></RakeGroup><RakeTask description="# Rolls the schema back to the previous version (specify steps w/ STEP=n)" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeTask description="# Create a db/schema.rb file that can be portably used against any DB supported by AR" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="# Load a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /></RakeGroup><RakeTask description="# Load the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeTask description="# Create the database, load the schema, and initialize with the seed data (use db:reset to also drop the db first)" fullCmd="db:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="# Dump the database structure to an SQL file" fullCmd="db:structure:dump" taksId="dump" /></RakeGroup><RakeTask description="# Retrieves the current schema version number" fullCmd="db:version" taksId="version" /><RakeTask description="" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask description="" fullCmd="db:charset" taksId="charset" /><RakeTask description="" fullCmd="db:collation" taksId="collation" /><RakeGroup description="" fullCmd="" taksId="create"><RakeTask description="" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="drop"><RakeTask description="" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:forward" taksId="forward" /><RakeTask description="" fullCmd="db:load_config" taksId="load_config" /><RakeTask description="" fullCmd="db:reset" taksId="reset" /><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="" fullCmd="db:sessions:clear" taksId="clear" /><RakeTask description="" fullCmd="db:sessions:create" taksId="create" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="" fullCmd="db:test:clone" taksId="clone" /><RakeTask description="" fullCmd="db:test:clone_structure" taksId="clone_structure" /><RakeTask description="" fullCmd="db:test:load" taksId="load" /><RakeTask description="" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="db:test:purge" taksId="purge" /></RakeGroup></RakeGroup><RakeTask description="# Default: run specs" fullCmd="default" taksId="default" /><RakeGroup description="" fullCmd="" taksId="doc"><RakeTask description="# Generate docs for the app -- also available doc:rails, doc:guides, doc:plugins (options: TEMPLATE=/rdoc-template.rb, TITLE=&quot;Custom Title&quot;)" fullCmd="doc:app" taksId="app" /><RakeTask description="" fullCmd="doc:clobber" taksId="clobber" /><RakeTask description="" fullCmd="doc:clobber_app" taksId="clobber_app" /><RakeTask description="" fullCmd="doc:clobber_plugins" taksId="clobber_plugins" /><RakeTask description="" fullCmd="doc:clobber_rails" taksId="clobber_rails" /><RakeTask description="" fullCmd="doc:guides" taksId="guides" /><RakeTask description="" fullCmd="doc:plugins" taksId="plugins" /><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="" fullCmd="doc:plugins:acts_as_tree" taksId="acts_as_tree" /><RakeTask description="" fullCmd="doc:plugins:rails_upgrade" taksId="rails_upgrade" /><RakeTask description="" fullCmd="doc:plugins:station" taksId="station" /></RakeGroup><RakeTask description="" fullCmd="doc:rails" taksId="rails" /><RakeTask description="" fullCmd="doc:reapp" taksId="reapp" /><RakeTask description="" fullCmd="doc:rerails" taksId="rerails" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="groups"><RakeTask description="# Upadte all application groups to create the associated group mailing lists" fullCmd="groups:update_groups" taksId="update_groups" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="jobs"><RakeTask description="# Clear the delayed_job queue" fullCmd="jobs:clear" taksId="clear" /><RakeTask description="# Returns the number of queued jobs (delayed_job)" fullCmd="jobs:queued" taksId="queued" /><RakeTask description="# Start a delayed_job worker" fullCmd="jobs:work" taksId="work" /><RakeTask description="# Start a delayed_job worker and exit when all available jobs are complete" fullCmd="jobs:workoff" taksId="workoff" /><RakeTask description="" fullCmd="jobs:environment_options" taksId="environment_options" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="license"><RakeTask description="# Add license file in all controllers and models" fullCmd="license:add" taksId="add" /><RakeTask description="" fullCmd="license:remove" taksId="remove" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="# Truncates all *.log files in log/ to zero bytes" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="mconf"><RakeGroup description="" fullCmd="" taksId="analytics"><RakeTask description="# Resets the Statistics table with data from google analytics from ENV['FROM'] or yesterday if not set" fullCmd="mconf:analytics:init" taksId="init" /><RakeTask description="# Updates the Statistics table with data from google analytics" fullCmd="mconf:analytics:print" taksId="print" /><RakeTask description="# Increments the Statistics table with data from google analytics from ENV['FROM'] or yesterday if not set" fullCmd="mconf:analytics:update" taksId="update" /></RakeGroup><RakeTask description="# Global Statistics" fullCmd="mconf:stats" taksId="stats" /></RakeGroup><RakeTask description="# Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask description="# Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="# Enumerate a custom annotation, specify with ANNOTATION=CUSTOM" fullCmd="notes:custom" taksId="custom" /><RakeTask description="" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="rails"><RakeTask description="# Applies the template supplied by LOCATION=(/path/to/template) or URL" fullCmd="rails:template" taksId="template" /><RakeTask description="# Update both configs and public/javascripts from Rails (or use just update:javascripts or update:configs)" fullCmd="rails:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="upgrade"><RakeTask description="# Backs up your likely modified files so you can run the Rails 3 generator on your app with little risk" fullCmd="rails:upgrade:backup" taksId="backup" /><RakeTask description="# Runs a battery of checks on your Rails 2.x app and generates a report on required upgrades for Rails 3" fullCmd="rails:upgrade:check" taksId="check" /><RakeTask description="# Extracts your configuration code so you can create a new config/application.rb" fullCmd="rails:upgrade:configuration" taksId="configuration" /><RakeTask description="# Generates a Gemfile for your Rails 3 app out of your config.gem directives" fullCmd="rails:upgrade:gems" taksId="gems" /><RakeTask description="# Create a new, upgraded route file from your current routes.rb" fullCmd="rails:upgrade:routes" taksId="routes" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="freeze"><RakeTask description="" fullCmd="rails:freeze:edge" taksId="edge" /><RakeTask description="" fullCmd="rails:freeze:gems" taksId="gems" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="templates"><RakeTask description="" fullCmd="rails:templates:copy" taksId="copy" /></RakeGroup><RakeTask description="" fullCmd="rails:unfreeze" taksId="unfreeze" /><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="" fullCmd="rails:update:application_controller" taksId="application_controller" /><RakeTask description="" fullCmd="rails:update:configs" taksId="configs" /><RakeTask description="" fullCmd="rails:update:javascripts" taksId="javascripts" /><RakeTask description="" fullCmd="rails:update:scripts" taksId="scripts" /></RakeGroup></RakeGroup><RakeTask description="# Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeTask description="# Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions)" fullCmd="secret" taksId="secret" /><RakeGroup description="" fullCmd="" taksId="setup"><RakeTask description="# Basic setup, including git submodules and config files" fullCmd="setup:basic" taksId="basic" /><RakeTask description="# Setup the configuration files" fullCmd="setup:config" taksId="config" /><RakeTask description="# DB setup, will destroy your entire DB and recreate it" fullCmd="setup:db" taksId="db" /><RakeTask description="# Full setup, from basic configurations to default DB data creation" fullCmd="setup:full" taksId="full" /><RakeTask description="# Update Git Submodules" fullCmd="setup:git_submodules" taksId="git_submodules" /><RakeTask description="# Populate the DB with random test data" fullCmd="setup:populate" taksId="populate" /><RakeTask description="# Set a new secret_token in initializers/secret_token.rb" fullCmd="setup:secret" taksId="secret" /></RakeGroup><RakeTask description="# Run all specs in spec directory (excluding plugin specs)" fullCmd="spec" taksId="spec" /><RakeGroup description="" fullCmd="" taksId="spec"><RakeTask description="# Run the code examples in spec/controllers" fullCmd="spec:controllers" taksId="controllers" /><RakeTask description="# Run the code examples in spec/helpers" fullCmd="spec:helpers" taksId="helpers" /><RakeTask description="# Run the code examples in spec/lib" fullCmd="spec:lib" taksId="lib" /><RakeTask description="# Run the code examples in spec/mailers" fullCmd="spec:mailers" taksId="mailers" /><RakeTask description="# Run the code examples in spec/models" fullCmd="spec:models" taksId="models" /><RakeTask description="# Run all specs with rcov" fullCmd="spec:rcov" taksId="rcov" /><RakeTask description="# Run the code examples in spec/requests" fullCmd="spec:requests" taksId="requests" /><RakeTask description="# Run the code examples in spec/routing" fullCmd="spec:routing" taksId="routing" /><RakeTask description="# Run the code examples in spec/views" fullCmd="spec:views" taksId="views" /><RakeTask description="" fullCmd="spec:statsetup" taksId="statsetup" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="station"><RakeGroup description="" fullCmd="" taksId="attachment_fu"><RakeTask description="# Copy database files to filesystem" fullCmd="station:attachment_fu:db2file" taksId="db2file" /><RakeTask description="# Regenerate thumbnails" fullCmd="station:attachment_fu:regenerate_thumbs" taksId="regenerate_thumbs" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="icons"><RakeGroup description="" fullCmd="" taksId="oxygen"><RakeTask description="# Copy oxygen icons from source_dir to destination_dir" fullCmd="station:icons:oxygen:copy" taksId="copy" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="openid"><RakeTask description="# OpenID store Garbage Collector" fullCmd="station:openid:gc_ar_store" taksId="gc_ar_store" /><RakeGroup description="" fullCmd="" taksId="identity_uris"><RakeTask description="# Clear OpenID identity URIs" fullCmd="station:openid:identity_uris:clear" taksId="clear" /><RakeTask description="# Create OpenID identity URIs" fullCmd="station:openid:identity_uris:create" taksId="create" /><RakeTask description="# Reset OpenID identity URIs" fullCmd="station:openid:identity_uris:reset" taksId="reset" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="sources"><RakeTask description="# Import all sources" fullCmd="station:sources:import" taksId="import" /></RakeGroup></RakeGroup><RakeTask description="# Report code statistics (KLOCs, etc) from the application" fullCmd="stats" taksId="stats" /><RakeTask description="# Runs test:units, test:functionals, test:integration together (also available: test:benchmark, test:profile, test:plugins)" fullCmd="test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="# Run tests for {:recent=&gt;&quot;test:prepare&quot;} / Test recent changes" fullCmd="test:recent" taksId="recent" /><RakeTask description="# Run tests for {:uncommitted=&gt;&quot;test:prepare&quot;} / Test changes since last checkin (only Subversion and Git)" fullCmd="test:uncommitted" taksId="uncommitted" /><RakeTask description="" fullCmd="test:benchmark" taksId="benchmark" /><RakeTask description="" fullCmd="test:functionals" taksId="functionals" /><RakeTask description="" fullCmd="test:integration" taksId="integration" /><RakeTask description="" fullCmd="test:plugins" taksId="plugins" /><RakeTask description="" fullCmd="test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="test:profile" taksId="profile" /><RakeTask description="" fullCmd="test:units" taksId="units" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="time"><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="# Displays all time zones, also available: time:zones:us, time:zones:local -- filter with OFFSET parameter, e.g., OFFSET=-6" fullCmd="time:zones:all" taksId="all" /><RakeTask description="" fullCmd="time:zones:local" taksId="local" /><RakeTask description="" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeTask description="# Clear session, cache, and socket files from tmp/ (narrow w/ tmp:sessions:clear, tmp:cache:clear, tmp:sockets:clear)" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="# Creates tmp directories for sessions, cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="" fullCmd="tmp:sessions:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="translate"><RakeTask description="# Check untranslated strings (using rake translate:untranslated), translate them with google translate and add to the ENV['LOCALE']" fullCmd="translate:add_untranslated" taksId="add_untranslated" /><RakeTask description="# List keys that have changed I18n texts between YAML file ENV['FROM_FILE'] and YAML file ENV['TO_FILE']" fullCmd="translate:changed" taksId="changed" /><RakeTask description="# Read all strings ENV['LOCALE'] and saves them sorted and with standard YAML formatting" fullCmd="translate:cleanup" taksId="cleanup" /><RakeTask description="# Apply Google translate to auto translate all texts in locale ENV['FROM'] to locale ENV['TO']" fullCmd="translate:google" taksId="google" /><RakeTask description="# Merge I18n keys from log/translations.yml into config/locales/*.yml (for use with the Rails I18n TextMate bundle)" fullCmd="translate:merge_keys" taksId="merge_keys" /><RakeTask description="# Show I18n keys that are being used but are missing in the ENV['LOCALE']" fullCmd="translate:missing" taksId="missing" /><RakeTask description="# Read all strings ENV['SOURCE'], remove all the keys not present in ENV['MODEL'] and saves them sorted and with standard YAML formatting" fullCmd="translate:remove_deleted_keys" taksId="remove_deleted_keys" /><RakeTask description="# Read all strings ENV['LOCALE'], remove the keys in a base file and saves them sorted and with standard YAML formatting" fullCmd="translate:remove_keys" taksId="remove_keys" /><RakeTask description="# Finds all strings referenced in the files in app/**/*, compares them with the strings in ENV['FILE']and saves only the keys existent in both hashes" fullCmd="translate:remove_unused_keys" taksId="remove_unused_keys" /><RakeTask description="# Show untranslated keys for locale ENV['LOCALE'] (defaults to all locales) compared to ENV['BASE']" fullCmd="translate:untranslated" taksId="untranslated" /></RakeGroup><RakeTask description="# Task for the Travis CI" fullCmd="travis" taksId="travis" /><RakeTask description="" fullCmd="coverage" taksId="coverage" /><RakeTask description="" fullCmd="doc" taksId="doc" /><RakeTask description="" fullCmd="doc/api" taksId="doc/api" /><RakeTask description="" fullCmd="doc/api/index.html" taksId="doc/api/index.html" /><RakeTask description="" fullCmd="doc/app" taksId="doc/app" /><RakeTask description="" fullCmd="doc/app/index.html" taksId="doc/app/index.html" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeTask description="" fullCmd="noop" taksId="noop" /><RakeTask description="" fullCmd="rails_env" taksId="rails_env" /></RakeGroup></Settings>
